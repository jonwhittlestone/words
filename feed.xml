<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://words.howapped.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://words.howapped.com/" rel="alternate" type="text/html" /><updated>2021-12-29T02:41:38-06:00</updated><id>https://words.howapped.com/feed.xml</id><title type="html">howapped words</title><subtitle>Learnings and updates from the Howapped labs.</subtitle><entry><title type="html">Effective Engineering Management</title><link href="https://words.howapped.com/book%20notes/work%20life/non-fiction/2021/09/15/team-leading-dos-and-donts.html" rel="alternate" type="text/html" title="Effective Engineering Management" /><published>2021-09-15T00:00:00-05:00</published><updated>2021-09-15T00:00:00-05:00</updated><id>https://words.howapped.com/book%20notes/work%20life/non-fiction/2021/09/15/team-leading-dos-and-donts</id><content type="html" xml:base="https://words.howapped.com/book%20notes/work%20life/non-fiction/2021/09/15/team-leading-dos-and-donts.html">&lt;p&gt;As we know Software Development is not just about technical problem solving, but the human factors involved when delivering a product at scale.&lt;/p&gt;

&lt;p&gt;From an essay in &lt;em&gt;Software Engineering at Google&lt;/em&gt;, Brian Fitzpatrick discusses engineering management patterns and anti-patterns. At it’s core are the values of Trust, Humility and Respect.&lt;/p&gt;

&lt;p&gt;I’ve analysed and summarised below.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don’t&lt;/strong&gt;: Hire Pushovers&lt;/p&gt;

&lt;p&gt;This means hiring people that are smarter than you and could eventually replace you.&lt;/p&gt;

&lt;p&gt;When leading a team or as indivividual contributor, our general strategy should be ‘We may leave at any time, so have the project and processes in a state where they are documented and can be handed over.&lt;/p&gt;

&lt;p&gt;At first, the statement above may sound negative. But this approach means you and everyone around you progress on to new projects and opportunities.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don’t&lt;/strong&gt;: Ignore Low performers&lt;/p&gt;

&lt;p&gt;The team suffers if there is a team member who isn’t doing their best and you don’t address it.&lt;/p&gt;

&lt;p&gt;Keeping a low achiever in your team keeps high performers from joining and encourages existing high performers to leave.&lt;/p&gt;

&lt;p&gt;Instead, help the strugglers &lt;strong&gt;up&lt;/strong&gt;, or out.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don’t&lt;/strong&gt;: Ignore Human Issues&lt;/p&gt;

&lt;p&gt;Focusing all your energies on technical problem solving can mean you’ve neglected colleagues’ personal poblems. This sows discontent, leading to a lack of team productivity.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don’t&lt;/strong&gt;: Be everyone’s friend&lt;/p&gt;

&lt;p&gt;Becoming a manager or team lead of colleagues where previously you were peers may be uncomfortable at first.&lt;/p&gt;

&lt;p&gt;Having a weekly team lunch can be an effective way to remain socially connected without making them uncomfortable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don’t&lt;/strong&gt;: Compromise the hiring bar.&lt;/p&gt;

&lt;p&gt;This can happen when you need to hire quickly, the legendary Blitzscale! Don’t be tempted.&lt;/p&gt;

&lt;p&gt;Don’t sacrifice the hiring standard because, the cost of hiring the appropriate person pales compared to dealing with a bad hire.&lt;/p&gt;

&lt;p&gt;In the words of Steve Jobs, &lt;em&gt;A people hire other A people. B people hire C people.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don’t&lt;/strong&gt;: Treat your team like children&lt;/p&gt;

&lt;p&gt;Trust them to be great, and they will be great.&lt;/p&gt;

&lt;p&gt;Give them opportunity to be responsible for their work.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do&lt;/strong&gt;: Lose the Ego&lt;/p&gt;

&lt;p&gt;This means trusting your team by respecting the abilities and prior accomplishments of team members.&lt;/p&gt;

&lt;p&gt;Help to set goals and reach consensus but the details of &lt;strong&gt;how&lt;/strong&gt; to reach them are best decided by the people putting the product together.&lt;/p&gt;

&lt;p&gt;This gives the team a better sense of accountability, ownership and responsibility.&lt;/p&gt;

&lt;p&gt;This also means accepting criticism openly and avoiding the urge to be territorial.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do&lt;/strong&gt;: Be a zen master&lt;/p&gt;

&lt;p&gt;Control your emotions and reactions, because a leader is always on stage and your team is always conciously and unconsciously looking to you for cues on how to react.&lt;/p&gt;

&lt;p&gt;This can mean keeping your cynicsm to yourself.&lt;/p&gt;

&lt;p&gt;Asking questions is a great way to instill humility, respect and trust because it’s helps the other person problem solve on their own by trying to define and explore the problem.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do&lt;/strong&gt;: Be a catalyst&lt;/p&gt;

&lt;p&gt;Encourage democracy rather than a dictatorship by building consensus. This can either mean guiding the process from start to finish, or just giving it a gentle nudge in the right direction.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do&lt;/strong&gt;: Remove roadblocks&lt;/p&gt;

&lt;p&gt;Help the team overcome technical or organisational hurdles to get it moving again. Often this means contacting the appropriate team for getting access to particular infrastructure.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do&lt;/strong&gt;: Be a mentor/teacher&lt;/p&gt;

&lt;p&gt;Whether you like it or not, a team leader will end up guiding a more junior team member through; code, technology or architectural concept or team culture.&lt;/p&gt;

&lt;p&gt;For this you need:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Experience with your team’s processes and systems.&lt;/li&gt;
  &lt;li&gt;The ability to explain things to someone else.&lt;/li&gt;
  &lt;li&gt;The ability to guage how much help your mentee needs.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The last point is key because you don’t want to be overexplaining since the mentee will just tune you out.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do&lt;/strong&gt;: Set clear goals&lt;/p&gt;

&lt;p&gt;You need to define a concise team mission statement to ensure your team is aligned about the direction in which it’s heading.&lt;/p&gt;

&lt;p&gt;Then …&lt;/p&gt;

&lt;p&gt;Step back and give it more autonomy and periodically checking in to make sure everyone is still on the right track.&lt;/p&gt;

&lt;p&gt;This drastically improves the efficiency of your team because no energy is wasted where individuals can pull the product in slightly different directions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do&lt;/strong&gt;: Be Honest&lt;/p&gt;

&lt;p&gt;There’s the need for supreme honesty when giving direct feedback. Avoid the &lt;a href=&quot;https://www.psychologytoday.com/us/blog/creative-leadership/201808/no-one-wants-eat-your-compliment-sandwich&quot;&gt;compliment sandwich&lt;/a&gt; since this can deflect attention from the issue that requires change or improvement.&lt;/p&gt;

&lt;p&gt;When giving critism, delivery is key to making sure the message is heard. Avoid sugarcoating.&lt;/p&gt;

&lt;p&gt;Kindness and empathy is critical.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do&lt;/strong&gt;: Track Happiness&lt;/p&gt;

&lt;p&gt;To stave off discontent, here are some ideas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;At the end of a weekly one-on-one, ask “What do you need”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Make sure people get recognition for their work by tracking the mundane tasks and distributing responsibilities evenly.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;To prevent burnout, track hours and exchange them for fun team activities.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;Ultimately, you need to be an enabler and plan how you are going to help your team members realise their career wishes and desires. This might be with opportunities to improve themselves or be recognised for the work they do.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Please buy! I thoroughly recommend.&lt;/p&gt;

&lt;p&gt;You may buy Software Engineering at Google here.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://uk.bookshop.org/books/software-engineering-at-google-lessons-learned-from-programming-over-time/9781492082798&quot;&gt;Bookshop.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/kMpCBtx.png&quot; alt=&quot;&quot; title=&quot;Software Engineering at Google&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">As we know Software Development is not just about technical problem solving, but the human factors involved when delivering a product at scale.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://i.imgur.com/syhowyL.png" /><media:content medium="image" url="https://i.imgur.com/syhowyL.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Book Notes - No Rules Rules</title><link href="https://words.howapped.com/book%20notes/work%20life/non-fiction/2021/02/07/book-notes-no-rules-rules-netflix.html" rel="alternate" type="text/html" title="Book Notes - No Rules Rules" /><published>2021-02-07T00:00:00-06:00</published><updated>2021-02-07T00:00:00-06:00</updated><id>https://words.howapped.com/book%20notes/work%20life/non-fiction/2021/02/07/book-notes-no-rules-rules-netflix</id><content type="html" xml:base="https://words.howapped.com/book%20notes/work%20life/non-fiction/2021/02/07/book-notes-no-rules-rules-netflix.html">&lt;p&gt;As soon as I saw the title, I knew this is a book I had to read.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;NO RULES RULES&lt;/p&gt;

  &lt;p&gt;NETFLIX and the Culture of Reinvention&lt;/p&gt;

  &lt;p&gt;REED HASTINGS&lt;/p&gt;

  &lt;p&gt;ERIN MEYER&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are 10 chapters which cover the creative workplace culture of Netflix - the highly succesful streaming and film production company.&lt;/p&gt;

&lt;p&gt;After having worked in various levels of progressive workplace culture at small and large companies, this book really connected the dots for me.&lt;/p&gt;

&lt;p&gt;Here are my notes transferred from my &lt;a href=&quot;https://time.com/collection/best-inventions-2020/5911408/remarkable-2/&quot;&gt;Remarkable tablet&lt;/a&gt; (which I’ve fallen in love with)&lt;/p&gt;

&lt;h3 id=&quot;1-first-build-up-talent-density&quot;&gt;1. First, build up talent density&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Your number one goal as leader is to develop a work environment consisting of stunning colleagues&lt;/li&gt;
  &lt;li&gt;Stunning colleagues accomplish significant amounts of important work and are exceptionally creative and passionate&lt;/li&gt;
  &lt;li&gt;Jerks, slackers and sweet people with non stellar performance or pessimists on the team will bring down the performance of everyone&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-say-what-you-really-think-with-positive-intent&quot;&gt;2. Say what you really think (with positive intent)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;With candour, high performers will become outstanding performers . Frequent candid feedback exponentially magnifies the speed and effectiveness of your work force&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Set the stage for candour by building feedback moments into your regular meetings&lt;/li&gt;
  &lt;li&gt;Coach your employees to give and receive feedback effectively following the 4A guidelines (live) (Give) )
    &lt;ul&gt;
      &lt;li&gt;Aim to Assist (Giving)&lt;/li&gt;
      &lt;li&gt;Actionable (Giving)&lt;/li&gt;
      &lt;li&gt;Appreciate (Receiving)&lt;/li&gt;
      &lt;li&gt;Accept or Discard (Receiving)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;As a leader solicit feedback regularly and respond with belonging cues when you receive&lt;/li&gt;
  &lt;li&gt;Get rid of jerks as you instill a culture of candour&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3a-remove-vacation-policy&quot;&gt;3a. Remove Vacation Policy&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;If you aren’t tracking worked in a day, what is the point tracking days per year?&lt;/li&gt;
  &lt;li&gt;Leaders must model big-vacation taking to set example and precedent to guide employee behaviour&lt;/li&gt;
  &lt;li&gt;Explain there is no need to ask for prior approval and no one is expected to keep track of days away from the office&lt;/li&gt;
  &lt;li&gt;Up to employee to take few hours, days, a week, a month off.&lt;/li&gt;
  &lt;li&gt;Communicate to provide context&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3b-remove-travel-and-expense-approvals&quot;&gt;3b. Remove travel and expense approvals&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Remove, and encourage managers to set context about how to spend money up front, and check expenses at the back end. If people overspend, set more context&lt;/li&gt;
  &lt;li&gt;No expense controls mean finance departments must audit annually&lt;/li&gt;
  &lt;li&gt;Fire people that abuse the system but speak about the abuse opening so everyone knows repercussions&lt;/li&gt;
  &lt;li&gt;Costs from overspending aren’t nearly as high as the gains that freedom provides because employees are able to make quick decisions to spend money to help the business.&lt;/li&gt;
  &lt;li&gt;When you tell people you trust them, they will show you how trustworthy they are&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;4-pay-top-of-personal-market&quot;&gt;4. Pay top of personal market&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;The methods used by most companies to compensate employees are not ideal for a creative high- talent density workforce&lt;/li&gt;
  &lt;li&gt;Divide your workforce ‘into creative and operational. and pay creative workers top of market. This might mean hiring one exceptional instead of 10 adequate people&lt;/li&gt;
  &lt;li&gt;Don’t pay performance-related bonuses and put into salary instead&lt;/li&gt;
  &lt;li&gt;Teach employees to build their own networks and to invest time getting to know their own - and their teams’ - market value on an on- going bases Adjust salaries accordingly&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;5-open-the-books&quot;&gt;5. Open the books&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;A culture of transparency: No closed offices or assistants as guards&lt;/li&gt;
  &lt;li&gt;Open up books to employees and show how to read Pth accounts. Share sensitive financials&lt;/li&gt;
  &lt;li&gt;Desicions the might affect workforce well-being be opened up early. May cause anxiety but will create trust (which is more valuable)&lt;/li&gt;
  &lt;li&gt;If the transparency is at loggerheads with an individual’s privacy - of info is from a work circumstance, be candid but if not, say it’s not your place to share&lt;/li&gt;
  &lt;li&gt;If you’ve shown yourself to be competent, be open about your own mistakes to increase trust, goodwill, innovation&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;6-no-decision-making-approvals-needed&quot;&gt;6. No decision-making approvals needed&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;In a fast, innovative company ownership of big - ticket decision should be dispersed across workforce at different levels, not according hierarchical status.&lt;/li&gt;
  &lt;li&gt;Netflix mantra and the book’s main jacket quote: “Don’t seek to please your boss”&lt;/li&gt;
  &lt;li&gt;When employees join company, tell them they have a handful of metaphorical chips to make bets with. A workers performance is judged on collective outcome of these bets&lt;/li&gt;
  &lt;li&gt;To help good bets encourage staff to farm for dissent socialize the idea and test out the big bets. Teach that if a bet fails it should be ‘sunshined’ openly sharing learnings etc&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;7-the-keeper-test&quot;&gt;7. The keeper Test&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Encourage managers to be tough on performance by asking which of my people, if they told me they were leaving for a similar role, would I fight to keep?’&lt;/li&gt;
  &lt;li&gt;Avoid stack-ranking as they create internal competition. and discourage collaboration&lt;/li&gt;
  &lt;li&gt;‘Family’ metaphor for workforce isn’t as good as ‘Professional Sports Team’ Teach to instill feelings of . commitment, cohesion , camaraderie&lt;/li&gt;
  &lt;li&gt;When you realize you need to let someone go, a personal improvement plan is humiliating and costly. Instead use money for a generous severance&lt;/li&gt;
  &lt;li&gt;Employees may have fear that their job is on the line, so employees should ask their manager to ask ‘If I was thinking of leaving, how hard would you work to change my mind’&lt;/li&gt;
  &lt;li&gt;When an employee is let go, Speak openly and answer questions candidly. This will diminish their fear of being next and increase trust&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;8-max-up-candour-a-circle-of-trust&quot;&gt;8. Max up candour: A circle of trust&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;A thorough live 360/ feedback session every 6- 12 months ensures clear feedback&lt;/li&gt;
  &lt;li&gt;Performance reviews aren’t the best mechanism as can be one -sided and limited to just one person (employee boys&lt;/li&gt;
  &lt;li&gt;A 360 written report is good for annual feedback but don’t link to promotions&lt;/li&gt;
  &lt;li&gt;Use 4A feeback guidelines for live 360 dinners and start, stop, continue method with roughly 25% positive, 75% development with an actionable (no fluff)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;9-lead-with-context-not-control&quot;&gt;9. Lead with context, not control&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;The overall goal should be innovation (not error prevention) and operate in a loosely coupled System&lt;/li&gt;
  &lt;li&gt;To lead with context, you need a high talent density. After this get in lockstep alignment by providing and debating context to enable sound decision - making&lt;/li&gt;
  &lt;li&gt;If a poor decision has been made, don’t blame. Ask what context you failed to communicate.&lt;/li&gt;
  &lt;li&gt;Is everyone highly aligned on vision and objectives ?&lt;/li&gt;
  &lt;li&gt;A loosely coupled organisation should resemble a tree rather than a pyramid. The boss is at the roots, holding up the trunk of senior managers who support the outer branches where decisions are made.&lt;/li&gt;
  &lt;li&gt;These policies, Reed argues do not work for Netflix/a creative engineering culture.
    &lt;ul&gt;
      &lt;li&gt;Vacation Policies&lt;/li&gt;
      &lt;li&gt;Decision- Making approvals&lt;/li&gt;
      &lt;li&gt;Expense Policies&lt;/li&gt;
      &lt;li&gt;Performance Improvement Glans&lt;/li&gt;
      &lt;li&gt;Approval Processes&lt;/li&gt;
      &lt;li&gt;Raise Pools&lt;/li&gt;
      &lt;li&gt;Key Performance Indicators&lt;/li&gt;
      &lt;li&gt;Management by Objective&lt;/li&gt;
      &lt;li&gt;Travel Policies&lt;/li&gt;
      &lt;li&gt;Decision - Making by Committee&lt;/li&gt;
      &lt;li&gt;Contract Sign offs&lt;/li&gt;
      &lt;li&gt;ay- Grades&lt;/li&gt;
      &lt;li&gt;Pay- per performance Bonuses&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;10-going-global&quot;&gt;10. Going Global&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Map out corporate culture and compare to the culture you are expanding into&lt;/li&gt;
  &lt;li&gt;In less direct countries, implement more formal feedback mechanisms.&lt;/li&gt;
  &lt;li&gt;Encourage adaptability. Discuss openly what candour means in different parts of world. Work together to adapt&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">As soon as I saw the title, I knew this is a book I had to read.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://www.howapped.com/assets/files/no-rules-rules-netflix.png" /><media:content medium="image" url="http://www.howapped.com/assets/files/no-rules-rules-netflix.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">AWS Certified Solutions Architect - Exam Differences</title><link href="https://words.howapped.com/aws/2020/07/28/AWS-architect-exam-differences.html" rel="alternate" type="text/html" title="AWS Certified Solutions Architect - Exam Differences" /><published>2020-07-28T00:00:00-05:00</published><updated>2020-07-28T00:00:00-05:00</updated><id>https://words.howapped.com/aws/2020/07/28/AWS-architect-exam-differences</id><content type="html" xml:base="https://words.howapped.com/aws/2020/07/28/AWS-architect-exam-differences.html">&lt;p&gt;AWS have released an update on their most popular and wide-ranging certification course.&lt;/p&gt;

&lt;p&gt;The software architect exam at associate level SAA-C01 has been retired and SAA-C02 takes its place.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;October 2020 Update: &lt;a href=&quot;https://www.credly.com/badges/de891843-ae2c-44eb-89e2-9aa88367dd07?source=linked_in_profile&quot;&gt;I passed!&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Commenters with experience of the two will maintain that as long as you keep to the fundamentals of the &lt;a href=&quot;https://aws.amazon.com/architecture/well-architected/?wa-lens-whitepapers.sort-by=item.additionalFields.sortDate&amp;amp;wa-lens-whitepapers.sort-order=desc&quot;&gt;5 pillars of the well-architected framework&lt;/a&gt;, the two exams have mostly the same content.&lt;/p&gt;

&lt;p&gt;It pays to be aware of the new products AWS offer. We know that being able to leverage natively provided technologies from a cloud provider will often present efficiency gains in the &lt;a href=&quot;https://en.wikipedia.org/wiki/Systems_development_life_cycle&quot;&gt;Software Development Lifecycle&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the SAA-C02 exam, the new technologies we should be aware of:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;&lt;!-- What Is it--&gt;&lt;/th&gt;
      &lt;th&gt;&lt;!--Good to know for--&gt;&lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;AWS Global Accelerator&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Elastic Fabric Adapter&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Elastic Network Adapter&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;AWS Parallel Cluster&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Amazon FSx&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;AWS DataSync&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;AWS Directory Service&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;High Performance Computing&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Aurora Serverless&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content><author><name></name></author><summary type="html">AWS have released an update on their most popular and wide-ranging certification course.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://i.imgur.com/UrmOp2V.png" /><media:content medium="image" url="https://i.imgur.com/UrmOp2V.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Computers are fast - A cheatsheet</title><link href="https://words.howapped.com/cheatsheet/python%20performance/2020/07/23/computers-are-fast-cheatsheet.html" rel="alternate" type="text/html" title="Computers are fast - A cheatsheet" /><published>2020-07-23T00:00:00-05:00</published><updated>2020-07-23T00:00:00-05:00</updated><id>https://words.howapped.com/cheatsheet/python%20performance/2020/07/23/computers-are-fast-cheatsheet</id><content type="html" xml:base="https://words.howapped.com/cheatsheet/python%20performance/2020/07/23/computers-are-fast-cheatsheet.html">&lt;style&gt;
table {
    width:100%;
}
&lt;/style&gt;

&lt;p&gt;This is inspired by Julia Evans and Kamal Marhubi’s excellent mini-quiz on the data rates of systems and components.&lt;/p&gt;

&lt;p&gt;The below cheatsheet serves as a summary of those benchmark speeds, for at-a-glance consumption.&lt;/p&gt;

&lt;h2 id=&quot;orders-of-magnitude&quot;&gt;Orders of magnitude&lt;/h2&gt;

&lt;p&gt;The idea is not necessarily know the exact figures for a particular benchmark, just the right order of magnitude.&lt;/p&gt;

&lt;p&gt;🐌 10&lt;sup&gt;0&lt;/sup&gt; 1&lt;/p&gt;

&lt;p&gt;🦥 10&lt;sup&gt;1&lt;/sup&gt; 10&lt;/p&gt;

&lt;p&gt;🚶 10&lt;sup&gt;2&lt;/sup&gt; 100&lt;/p&gt;

&lt;p&gt;🏃‍♀️ 10&lt;sup&gt;3&lt;/sup&gt; 1,000&lt;/p&gt;

&lt;p&gt;🏇‍ 10&lt;sup&gt;4&lt;/sup&gt; 10,000&lt;/p&gt;

&lt;p&gt;‍🏎️💨 10&lt;sup&gt;5&lt;/sup&gt; 100,000&lt;/p&gt;

&lt;p&gt;🚁 10&lt;sup&gt;6&lt;/sup&gt; 1,000,000&lt;/p&gt;

&lt;p&gt;✈️ 10&lt;sup&gt;7&lt;/sup&gt; 10,000,000&lt;/p&gt;

&lt;p&gt;🚀 10&lt;sup&gt;8&lt;/sup&gt; 100,000,000&lt;/p&gt;

&lt;p&gt;🌠 10&lt;sup&gt;9&lt;/sup&gt; 1,000,000,000&lt;/p&gt;

&lt;h2 id=&quot;how-much-can-be-done-in-a-second&quot;&gt;‘How much can be done in a second’&lt;/h2&gt;

&lt;h3 id=&quot;sumc&quot;&gt;&lt;a href=&quot;https://github.com/jonwhittlestone/one-second/blob/master/benchmarks/sum.c&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sum.c&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Each loop adds to total&lt;/li&gt;
  &lt;li&gt;How many loop iterations per second?
    &lt;ul&gt;
      &lt;li&gt;🚀 - 🌠&lt;/li&gt;
      &lt;li&gt;Between 100 million and 1 Billion&lt;/li&gt;
      &lt;li&gt;10&lt;sup&gt;8&lt;/sup&gt; &amp;gt; and &amp;lt; 10&lt;sup&gt;9&lt;/sup&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;looppy&quot;&gt;&lt;a href=&quot;https://github.com/jonwhittlestone/one-second/blob/master/benchmarks/loop.py&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;loop.py&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Empty loop contents&lt;/li&gt;
  &lt;li&gt;How many loop iterations per second?
    &lt;ul&gt;
      &lt;li&gt;✈️ - 🚀&lt;/li&gt;
      &lt;li&gt;Between 10m and 100m&lt;/li&gt;
      &lt;li&gt;10&lt;sup&gt;7&lt;/sup&gt; &amp;gt; and &amp;lt; 10&lt;sup&gt;8&lt;/sup&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;dictpy&quot;&gt;&lt;a href=&quot;https://github.com/jonwhittlestone/one-second/blob/master/benchmarks/dict.py&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dict.py&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Add elements to a fixed-size dictionary&lt;/li&gt;
  &lt;li&gt;How many loop iterations per second?
    &lt;ul&gt;
      &lt;li&gt;✈️ - 🚀&lt;/li&gt;
      &lt;li&gt;Between 10m and 100m&lt;/li&gt;
      &lt;li&gt;10&lt;sup&gt;4&lt;/sup&gt; &amp;gt; and &amp;lt; 10&lt;sup&gt;5&lt;/sup&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;parse_http_requestpy&quot;&gt;&lt;a href=&quot;https://github.com/jonwhittlestone/one-second/blob/master/benchmarks/parse_http_request.py&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;parse_http_request.py&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Using Python built-in HTTP request parser&lt;/li&gt;
  &lt;li&gt;How many HTTP requests parsed per second?
    &lt;ul&gt;
      &lt;li&gt;🏇‍️ - ‍🏎️💨‍&lt;/li&gt;
      &lt;li&gt;Between 10,000 and 100,000&lt;/li&gt;
      &lt;li&gt;10&lt;sup&gt;4&lt;/sup&gt; &amp;gt; and &amp;lt; 10&lt;sup&gt;5&lt;/sup&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;download_webpagepy&quot;&gt;&lt;a href=&quot;https://github.com/jonwhittlestone/one-second/blob/master/benchmarks/download_webpage.py&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;download_webpage.py&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Downloading with urllib2&lt;/li&gt;
  &lt;li&gt;How many HTTP requests completed per second?
    &lt;ul&gt;
      &lt;li&gt;🐌‍️ - ‍🦥&lt;/li&gt;
      &lt;li&gt;Between 1 and 10&lt;/li&gt;
      &lt;li&gt;
        &lt;blockquote&gt;
          &lt;p&gt;The true cost depends on size, connection speed and distance from servers&lt;/p&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;run_pythonsh&quot;&gt;&lt;a href=&quot;https://github.com/jonwhittlestone/one-second/blob/master/benchmarks/run_python.sh&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;run_python.sh&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Running Python script(s) from bash&lt;/li&gt;
  &lt;li&gt;Bash loop iterations per second
    &lt;ul&gt;
      &lt;li&gt;🦥 - ‍🚶‍&lt;/li&gt;
      &lt;li&gt;Between 10 and 100&lt;/li&gt;
      &lt;li&gt;10&lt;sup&gt;1&lt;/sup&gt; &amp;gt; and &amp;lt; 10&lt;sup&gt;2&lt;/sup&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;write_to_diskpy&quot;&gt;&lt;a href=&quot;https://github.com/jonwhittlestone/one-second/blob/master/benchmarks/write_to_disk.py&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;write_to_disk.py&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Code run on a machine with an SSD&lt;/li&gt;
  &lt;li&gt;How many bytes written to disk in a second
    &lt;ul&gt;
      &lt;li&gt;🚀 - 🌠&lt;/li&gt;
      &lt;li&gt;Between 100 million and 1 Billion&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;How many megabytes written to disk in a second
    &lt;ul&gt;
      &lt;li&gt;🚶 - 🏃‍♀️&lt;/li&gt;
      &lt;li&gt;Between 100 and 1,000&lt;/li&gt;
      &lt;li&gt;My T480s running Ubuntu with SSD reports write speed: 2.3 GB/s and read 673 MB/s &lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;write_to_memorypy&quot;&gt;&lt;a href=&quot;https://github.com/jonwhittlestone/one-second/blob/master/benchmarks/write_to_memory.py&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;write_to_memory.py&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;How many bytes written to a string in memory in a second
    &lt;ul&gt;
      &lt;li&gt;🌠+&lt;/li&gt;
      &lt;li&gt;Above 1 Billion&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;grep_bytessh&quot;&gt;&lt;a href=&quot;https://github.com/jonwhittlestone/one-second/blob/master/benchmarks/grep_bytes.sh&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;grep_bytes.sh&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Bytes search in a second
    &lt;ul&gt;
      &lt;li&gt;🌠+&lt;/li&gt;
      &lt;li&gt;Above 1 Billion&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;find-filenamessh&quot;&gt;&lt;a href=&quot;https://github.com/jonwhittlestone/one-second/blob/master/benchmarks/find-filenames.sh&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;find-filenames.sh&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Files come from the filesystem cache&lt;/li&gt;
  &lt;li&gt;How many files listed in one second?
    &lt;ul&gt;
      &lt;li&gt;🏎💨 - ‍🚁&lt;/li&gt;
      &lt;li&gt;Between 100,000 and 1m&lt;/li&gt;
      &lt;li&gt;10&lt;sup&gt;5&lt;/sup&gt; &amp;gt; and &amp;lt; 10&lt;sup&gt;6&lt;/sup&gt;&lt;/li&gt;
      &lt;li&gt;
        &lt;blockquote&gt;
          &lt;p&gt;Grep can search at 2GB/s so more limited by disk speed than grep’s speed&lt;/p&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;json_parsepy&quot;&gt;&lt;a href=&quot;https://github.com/jonwhittlestone/one-second/blob/master/benchmarks/json-parse.py&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;json_parse.py&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Deserializing the same 65k of JSON repeatedly&lt;/li&gt;
  &lt;li&gt;How many loop iterations in a second?
    &lt;ul&gt;
      &lt;li&gt;🚶 - ‍🏃‍♀️&lt;/li&gt;
      &lt;li&gt;Between 100 and 1,000&lt;/li&gt;
      &lt;li&gt;10&lt;sup&gt;2&lt;/sup&gt; &amp;gt; and &amp;lt; 10&lt;sup&gt;3&lt;/sup&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;msgpack_parsepy&quot;&gt;&lt;a href=&quot;https://github.com/jonwhittlestone/one-second/blob/master/benchmarks/msgpack_parse.py&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;msgpack_parse.py&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Parse 46k of msgpack data&lt;/li&gt;
  &lt;li&gt;How many loop iterations in a second?
    &lt;ul&gt;
      &lt;li&gt;🏃‍♀️ - ‍🏇‍&lt;/li&gt;
      &lt;li&gt;Between 1,000 and 10,000&lt;/li&gt;
      &lt;li&gt;10&lt;sup&gt;3&lt;/sup&gt; &amp;gt; and &amp;lt; 10&lt;sup&gt;4&lt;/sup&gt;&lt;/li&gt;
      &lt;li&gt;
        &lt;blockquote&gt;
          &lt;p&gt;Your choice of format and deserialisation library (eg capnproto) makes a big difference&lt;/p&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;database_indexedpy&quot;&gt;&lt;a href=&quot;https://github.com/jonwhittlestone/one-second/blob/master/benchmarks/database_indexed.py&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;database_indexed.py&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Select one row from an indexed sqlite table containing 10m rows&lt;/li&gt;
  &lt;li&gt;How many queries in one second
    &lt;ul&gt;
      &lt;li&gt;‍🏇‍ - 🏎️💨&lt;/li&gt;
      &lt;li&gt;Between 10,000 and 100,000&lt;/li&gt;
      &lt;li&gt;10&lt;sup&gt;4&lt;/sup&gt; &amp;gt; and &amp;lt; 10&lt;sup&gt;5&lt;/sup&gt;&lt;/li&gt;
      &lt;li&gt;Typical query in 20 microseconds&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;database_unindexedpy&quot;&gt;&lt;a href=&quot;https://github.com/jonwhittlestone/one-second/blob/master/benchmarks/database_unindexed.py&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;database_unindexed.py&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Select one row from an unindexed sqlite table containing 10m rows&lt;/li&gt;
  &lt;li&gt;How many queries in one second
    &lt;ul&gt;
      &lt;li&gt;🐌‍️ - ‍🦥&lt;/li&gt;
      &lt;li&gt;Between 1 and 10&lt;/li&gt;
      &lt;li&gt;10&lt;sup&gt;0&lt;/sup&gt; &amp;gt; and &amp;lt; 10&lt;sup&gt;1&lt;/sup&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;hashpy&quot;&gt;&lt;a href=&quot;https://github.com/jonwhittlestone/one-second/blob/master/benchmarks/hash.py&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;hash.py&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;How many bytes hashed in one second?
    &lt;ul&gt;
      &lt;li&gt;🚀 - 🌠&lt;/li&gt;
      &lt;li&gt;Between 100 million and 1 Billion&lt;/li&gt;
      &lt;li&gt;10&lt;sup&gt;8&lt;/sup&gt; &amp;gt; and &amp;lt; 10&lt;sup&gt;9&lt;/sup&gt;&lt;/li&gt;
      &lt;li&gt;
        &lt;blockquote&gt;
          &lt;p&gt;MD5 is designed to be fast&lt;/p&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bcrypt_hashpy&quot;&gt;&lt;a href=&quot;https://github.com/jonwhittlestone/one-second/blob/master/benchmarks/bcrypt_hash.py&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bcrypt_hash.py&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Number of passwords hashed in a second?
    &lt;ul&gt;
      &lt;li&gt;🐌‍️ - ‍🦥&lt;/li&gt;
      &lt;li&gt;Between 1 and 10&lt;/li&gt;
      &lt;li&gt;10&lt;sup&gt;0&lt;/sup&gt; &amp;gt; and &amp;lt; 10&lt;sup&gt;1&lt;/sup&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;fill_arrayc&quot;&gt;&lt;a href=&quot;https://github.com/jonwhittlestone/one-second/blob/master/benchmarks/fill_array.c&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fill_array.c&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Memory is accessed sequentially from a CPU cache&lt;/li&gt;
  &lt;li&gt;Number of passwords hashed in a second?
    &lt;ul&gt;
      &lt;li&gt;🚀 - 🌠&lt;/li&gt;
      &lt;li&gt;Between 100 million and 1 Billion&lt;/li&gt;
      &lt;li&gt;10&lt;sup&gt;8&lt;/sup&gt; &amp;gt; and &amp;lt; 10&lt;sup&gt;9&lt;/sup&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;fill_arrayc-1&quot;&gt;&lt;a href=&quot;https://github.com/jonwhittlestone/one-second/blob/master/benchmarks/fill_array.c&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fill_array.c&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Number of passwords hashed in a second?
    &lt;ul&gt;
      &lt;li&gt;✈️ - 🚀&lt;/li&gt;
      &lt;li&gt;Between 10m and 100m&lt;/li&gt;
      &lt;li&gt;10&lt;sup&gt;4&lt;/sup&gt; &amp;gt; and &amp;lt; 10&lt;sup&gt;5&lt;/sup&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;resources-used-with-thanks-&quot;&gt;Resources used: with thanks 💚&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Do you know how much your computer can do in a second? - &lt;a href=&quot;http://computers-are-fast.github.io/&quot;&gt;Mini Quiz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.binarytides.com/linux-test-drive-speed/&quot;&gt;https://www.binarytides.com/linux-test-drive-speed/&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://i.imgur.com/pkQnonr.png" /><media:content medium="image" url="http://i.imgur.com/pkQnonr.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Book Notes - Managing Humans</title><link href="https://words.howapped.com/book%20notes/work%20life/non-fiction/2020/07/19/book-notes-managing-humans.html" rel="alternate" type="text/html" title="Book Notes - Managing Humans" /><published>2020-07-19T00:00:00-05:00</published><updated>2020-07-19T00:00:00-05:00</updated><id>https://words.howapped.com/book%20notes/work%20life/non-fiction/2020/07/19/book-notes-managing-humans</id><content type="html" xml:base="https://words.howapped.com/book%20notes/work%20life/non-fiction/2020/07/19/book-notes-managing-humans.html">&lt;p&gt;I (Jon) have recently finished this book about management and leadership. It does a great job in explaining empathy, archetypes and ‘general craziness of dysfunctional bright people’ with plenty of pertinent and amusing anecodotes.&lt;/p&gt;

&lt;p&gt;It’s written for aspiring and current managers and at 3rd edition, Michael writes as though he knows his audience well. He has clearly trodden the boards, delivered software projects, and led teams at Borland and Apple.&lt;/p&gt;

&lt;h2 id=&quot;my-rating-45&quot;&gt;My rating: 4/5&lt;/h2&gt;
&lt;h2 id=&quot;chapter-notes&quot;&gt;Chapter Notes&lt;/h2&gt;

&lt;h3 id=&quot;ch4---rands-test&quot;&gt;CH4 - Rands Test&lt;/h3&gt;

&lt;p&gt;Where the &lt;a href=&quot;https://www.joelonsoftware.com/2000/08/09/the-joel-test-12-steps-to-better-code/&quot;&gt;‘Joel test’&lt;/a&gt; can be an effective way to get a health check on a software team, the Rands test does the same for general team fitness in the context of management.&lt;/p&gt;

&lt;p&gt;A score of 10 or lower - ‘you’ve got serious problems’&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Do you have consistent one-on-ones, about topics other than status? (+1)&lt;/li&gt;
  &lt;li&gt;Do you have consistent team meetings? (+1)&lt;/li&gt;
  &lt;li&gt;Are handwritten status reports delivered weekly via email? (-1)&lt;/li&gt;
  &lt;li&gt;Are you comfortable saying ‘no’ to your boss? (+1)&lt;/li&gt;
  &lt;li&gt;Can you explain the strategy of your company to a stranger? (+1)&lt;/li&gt;
  &lt;li&gt;Can you explain current health of the business? (+1)&lt;/li&gt;
  &lt;li&gt;Is there a regular stand-up by the person in charge? Do you buy it? (+1)&lt;/li&gt;
  &lt;li&gt;Do you know what you want to do next? (+1) Does your boss? (+1)&lt;/li&gt;
  &lt;li&gt;Do you have time to be strategic? (+1)&lt;/li&gt;
  &lt;li&gt;Are you actively killing the grapevine? ie. Do you make a point to kill gossip? (+1)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ch39---incrementalist-vs-realists&quot;&gt;CH39 - Incrementalist vs. Realists&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Incrementalists and Realists don’t disagree about whether or not we should do something about the problem. We are disagreeing about how much we should do. … There are two distinct personalities when it comes to devising solutions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Incrementalists are realists and they have a pretty good idea of what is achievable given a problem to solve, a product to ship. … They tend to know all the secrets.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Completionists are dreamers. Their mantra is “If you’re going to spend the time given to solve a problem, solve it in a manner so you aren’t going to be solving it again in 3 months”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Incrementalists need vision and are driven by the goal of progress and constantly moving forward.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Completionists can often see the immediate solution, and the two-year solution and the five-year solution.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;ch40---organics-and-mechanics&quot;&gt;CH40 - Organics and Mechanics&lt;/h3&gt;

&lt;p&gt;The chapter covers how to speak to your manager and to identify if they are one of two personalities and the interpersonal conflict that may arise between the two. Lopp comments that the ensuing ‘organisational warfare’ is a waste of time (and money) as it focuses everyone on the peculiar personality quirks of the other rather than on the business.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Mechanics move forward methodically. They carefully gather information in a structured manner. They quietly observe and are comfortable predictable. They annoy the hell out of the organics&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Organics are all over the place. They tend to be loud and can tell a joke. They ask seemingly meaningless questions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Mechanic: “This guy is walking chaos”&lt;br /&gt;Organic: “This guy is totally uptight”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;ch52---chaotic-beautiful-snowflakes&quot;&gt;CH52 - Chaotic, Beautiful snowflakes&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Engineers have a well-deserved reputation for regularly being off by a factor of three in their work estimates, partly due to the fact that we are really shitty at estimating the no-linear chaotic work that exists in keeping a group of humans pointed in the right direction.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Michael’s parting thought&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The hard work of great leadership isn’t just managing the expected tasks that we can predict - it’s the art of successfully traversing the unexpected.&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><summary type="html">I (Jon) have recently finished this book about management and leadership. It does a great job in explaining empathy, archetypes and ‘general craziness of dysfunctional bright people’ with plenty of pertinent and amusing anecodotes.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://i.imgur.com/924BgKj.png" /><media:content medium="image" url="http://i.imgur.com/924BgKj.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Scheduled Severless Startup</title><link href="https://words.howapped.com/aws%20lambda/automation/python/2020/07/15/scheduled-serverless-startup.html" rel="alternate" type="text/html" title="Scheduled Severless Startup" /><published>2020-07-15T00:00:00-05:00</published><updated>2020-07-15T00:00:00-05:00</updated><id>https://words.howapped.com/aws%20lambda/automation/python/2020/07/15/scheduled-serverless-startup</id><content type="html" xml:base="https://words.howapped.com/aws%20lambda/automation/python/2020/07/15/scheduled-serverless-startup.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-07-15-scheduled-serverless-startup.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;The-Problem&quot;&gt;The Problem&lt;a class=&quot;anchor-link&quot; href=&quot;#The-Problem&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;p&gt;As part of the early Covid-19 response, Digital Ocean donated some free credit to us to host an app for a local food delivery scheme.&lt;/p&gt;
&lt;p&gt;To make that credit go as far as possible and to minimise power consumption, we'd like to power up and down the servers according to a schedule.&lt;/p&gt;
&lt;h1 id=&quot;The-Solution&quot;&gt;The Solution&lt;a class=&quot;anchor-link&quot; href=&quot;#The-Solution&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;p&gt;Here's how to do that with AWS Lambda, with cloudfront events. We iterate on that to use the Serverless Framework.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TLDR; Have a look at the &lt;a href=&quot;https://github.com/jonwhittlestone/scheduled-serverless-startup&quot;&gt;companion repo.&lt;/a&gt;. It contains an example dockerized web app and the shell scripts for starting containers and creating the service.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This article covers how to automate with a Digital Ocean droplet so to follow along with the code, you can create one using the example from &lt;a href=&quot;http://words.howapped.com/systemd/automation/2020/06/01/automatically-restart-docker-after-reboot-with-service.html#cURL-to-create-the-droplet&quot;&gt;a previous article&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We will examine the cURL statements, convert those into Python. We can use AWS Lambda to execute the Python in a serverless environment. Then, the AWS lambda functions can be triggered by Cloudwatch events to a schedule so machines can be brought online only during operating hours.&lt;/p&gt;
&lt;p&gt;We can notify any interested parties using Microsoft Teams - a topic for a subsequent post.&lt;/p&gt;
&lt;h2 id=&quot;Prerequisites&quot;&gt;Prerequisites&lt;a class=&quot;anchor-link&quot; href=&quot;#Prerequisites&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;You can always check the &lt;a href=&quot;https://github.com/jonwhittlestone/scheduled-serverless-startup&quot;&gt;companion repo.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You will need to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;.. have &lt;code&gt;jq&lt;/code&gt; installed to format JSON responses&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://stedolan.github.io/jq/download/&quot;&gt;Download JQ&lt;/a&gt; for your OS&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;.. have a server on which a dockerized web app will start automatically when the server is restarted&lt;ul&gt;
&lt;li&gt;See previous article on how to &lt;a href=&quot;http://words.howapped.com/systemd/automation/2020/06/01/automatically-restart-docker-after-reboot-with-service.html#cURL-to-create-the-droplet&quot;&gt;create one with DigitalOcean&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;.. have &lt;a href=&quot;https://boto3.amazonaws.com/v1/documentation/api/latest/guide/quickstart.html#installation&quot;&gt;installed Boto3 with your AWS account credentials&lt;/a&gt; so we can work with the AWS Python SDK.&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;cURL-statements-to-boot-down-and-up&quot;&gt;cURL statements to boot down and up&lt;a class=&quot;anchor-link&quot; href=&quot;#cURL-statements-to-boot-down-and-up&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;As covered in a &lt;a href=&quot;http://words.howapped.com/systemd/automation/2020/06/01/automatically-restart-docker-after-reboot-with-service.html&quot;&gt;previous post&lt;/a&gt;, our web app will restart when rebooted using a systemd service.&lt;/p&gt;
&lt;p&gt;Rather than ssh or the cloud provider's control panel, the server can be started and stopped using cURL.&lt;/p&gt;
&lt;p&gt;In the case of DigitalOcean:&lt;/p&gt;
&lt;p&gt;Find out the ID of the server:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl \
        -H 'Content-Type: application/json' \
        -H 'Authorization: Bearer '$DIGITAL_OCEAN_ACCESS_TOKEN'' \
    &quot;https://api.digitalocean.com/v2/droplets?name=scheduled-serverless&quot; | jq '.droplets[] | {id:.id, name:.name, status: .status}'&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The output gives us the ID&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    ...
},
{
  &quot;id&quot;: 195786885,
  &quot;name&quot;: &quot;scheduled-serverless&quot;,
  &quot;status&quot;: &quot;active&quot;
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And then power it down:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl -X POST \
    -H 'Content-Type: application/json' \
    -H 'Authorization: Bearer '$DIGITAL_OCEAN_ACCESS_TOKEN'' \
    -d '{&quot;type&quot;:&quot;power_off&quot;}' \
    &quot;https://api.digitalocean.com/v2/droplets/195786885/actions&quot; | jq '.[] | {id:.id, status:.status, type:.type}'&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which tells us it's in progress&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
  &quot;id&quot;: 955320153,
  &quot;status&quot;: &quot;in-progress&quot;,
  &quot;type&quot;: &quot;power_off&quot;
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The equivalent cURL for powering on the server is virtual identical&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl -X POST \
    -H 'Content-Type: application/json' \
    -H 'Authorization: Bearer '$DIGITAL_OCEAN_ACCESS_TOKEN'' \
    -d '{&quot;type&quot;:&quot;power_on&quot;}' \
    &quot;https://api.digitalocean.com/v2/droplets/195786885/actions&quot; | jq '.[] | {id:.id, status:.status, type:.type}'&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The web app from the example is running on port 80. We know the server's IP address by referring to the control panel. Let's confirm that the service is running by verifying the output in a browser.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jonwhittlestone/words/master/images/do_ip.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Requests-scripts-in-AWS-Lambda&quot;&gt;Requests scripts in AWS Lambda&lt;a class=&quot;anchor-link&quot; href=&quot;#Requests-scripts-in-AWS-Lambda&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;h3 id=&quot;The-cURL-statements-in-Python&quot;&gt;The cURL statements in Python&lt;a class=&quot;anchor-link&quot; href=&quot;#The-cURL-statements-in-Python&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;First, get the ID of the droplet.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;TOKEN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getenv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;DIGITAL_OCEAN_ACCESS_TOKEN&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DROPLET_NAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;scheduled-serverless&amp;#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;&amp;#39;Content-Type&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;application/json&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;&amp;#39;Authorization&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Bearer &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TOKEN&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TOKEN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Your environment should have the `DIGITAL_OCEAN_ACCESS_TOKEN exported.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_droplet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;https://api.digitalocean.com/v2/droplets&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{})&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;droplets&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,{})&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DROPLET_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;DROPLET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_droplet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Droplet ID: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DROPLET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;Droplet ID: 195786885
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Now we have the ID, let's define the functions for bringing the servers down and back up.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;power_off&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;{&amp;quot;type&amp;quot;:&amp;quot;power_off&amp;quot;}&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;https://api.digitalocean.com/v2/droplets/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DROPLET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/actions&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;power_on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;{&amp;quot;type&amp;quot;:&amp;quot;power_on&amp;quot;}&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;https://api.digitalocean.com/v2/droplets/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DROPLET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/actions&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;action_resp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;power_off&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;action_resp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;action&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;action_resp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;action&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;status&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;----&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# action_resp = power_on()&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# print(action_resp[&amp;#39;action&amp;#39;][&amp;#39;type&amp;#39;])&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# print(action_resp[&amp;#39;action&amp;#39;][&amp;#39;status&amp;#39;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;power_off
in-progress
----
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Running-the-scripts-in-AWS-Lambda&quot;&gt;Running the scripts in AWS Lambda&lt;a class=&quot;anchor-link&quot; href=&quot;#Running-the-scripts-in-AWS-Lambda&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Let's translate the cURL statements into Python.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Popping on a new on/off timestamp on a firebase stored stack&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;arrow&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;off&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;2020-08-11 09:04&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;on&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;2020-08-11 09:03&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# get data&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;https://wordsdothowappeddotcom.firebaseio.com/scheduled-serverless-startup.json?print=pretty&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{},)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# replace data&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;off&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_text output_error&quot;&gt;
&lt;pre&gt;
&lt;span class=&quot;ansi-red-fg&quot;&gt;---------------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;ansi-red-fg&quot;&gt;ModuleNotFoundError&lt;/span&gt;                       Traceback (most recent call last)
In  &lt;span class=&quot;ansi-blue-fg&quot;&gt;[12]&lt;/span&gt;:
Line &lt;span class=&quot;ansi-blue-fg&quot;&gt;4&lt;/span&gt;:     &lt;span class=&quot;ansi-blue-fg&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;ansi-cyan-fg ansi-underline&quot;&gt;arrow&lt;/span&gt;

&lt;span class=&quot;ansi-red-fg&quot;&gt;ModuleNotFoundError&lt;/span&gt;: No module named &amp;#39;arrow&amp;#39;
&lt;span class=&quot;ansi-red-fg&quot;&gt;---------------------------------------------------------------------------&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Schedule-the-scripts-with-Cloudwatch-events&quot;&gt;Schedule the scripts with Cloudwatch events&lt;a class=&quot;anchor-link&quot; href=&quot;#Schedule-the-scripts-with-Cloudwatch-events&quot;&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Putting-it-all-together-in-a-Serverless-Application-Framework-template&quot;&gt;Putting it all together in a Serverless Application Framework template&lt;a class=&quot;anchor-link&quot; href=&quot;#Putting-it-all-together-in-a-Serverless-Application-Framework-template&quot;&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Quality-of-Life-enhancements&quot;&gt;Quality of Life enhancements&lt;a class=&quot;anchor-link&quot; href=&quot;#Quality-of-Life-enhancements&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;When the target service is unavailable, it's quite unfriendly to show a blank 500 screen. A subsequent post outlines a solution for a forwarding service which can display an Open/Closed for business page to the user, with 'Opening times'&lt;/p&gt;
&lt;p&gt;As part of what's become known as 'Chatops', it's useful to update team members and stakeholders about the status of the server. A future addition will be to use the Microsoft Teams API to notify interested parties.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Resources-used:-with-thanks-&amp;#128154;&quot;&gt;Resources used: with thanks &amp;#128154;&lt;a class=&quot;anchor-link&quot; href=&quot;#Resources-used:-with-thanks-&amp;#128154;&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Curl converter &lt;a href=&quot;https://github.com/NickCarneiro/curlconverter&quot;&gt;Github repo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;AWS Lambda and Secret Management Overview &lt;a href=&quot;https://epsagon.com/development/aws-lambda-and-secret-management/&quot;&gt;Blog post from  Espagon&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sharing Secrets with AWS Lambda Using AWS Systems Manager Parameter Store &lt;a href=&quot;https://aws.amazon.com/blogs/compute/sharing-secrets-with-aws-lambda-using-aws-systems-manager-parameter-store/&quot;&gt;AWS Compute blog post&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://i.imgur.com/dIAyXJa.png" /><media:content medium="image" url="http://i.imgur.com/dIAyXJa.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">hello world serverless microservice</title><link href="https://words.howapped.com/aws%20lambda/boto3/python/aws%20api%20gateway/2020/07/01/serverless-endpoint-with-aws-lambda-api-gateway-and-boto3.html" rel="alternate" type="text/html" title="hello world serverless microservice" /><published>2020-07-01T00:00:00-05:00</published><updated>2020-07-01T00:00:00-05:00</updated><id>https://words.howapped.com/aws%20lambda/boto3/python/aws%20api%20gateway/2020/07/01/serverless-endpoint-with-aws-lambda-api-gateway-and-boto3</id><content type="html" xml:base="https://words.howapped.com/aws%20lambda/boto3/python/aws%20api%20gateway/2020/07/01/serverless-endpoint-with-aws-lambda-api-gateway-and-boto3.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-07-01-serverless-endpoint-with-aws-lambda-api-gateway-and-boto3.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Problem&quot;&gt;Problem&lt;a class=&quot;anchor-link&quot; href=&quot;#Problem&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;p&gt;We've been asked for an API that will work at web scale and be cost effective. A serverless API is perfect for this.&lt;/p&gt;
&lt;p&gt;What are the constituent parts needed to start working with the AWS SDK with Python and steps needed to write and execute a serverless script with AWS Lambda. How can this script be invoked by an HTTP endpoint?&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Solution&quot;&gt;Solution&lt;a class=&quot;anchor-link&quot; href=&quot;#Solution&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;p&gt;The companion repo consists utility code for deploying the lambda with &lt;a href=&quot;https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/lambda.html#lambda&quot;&gt;boto3&lt;/a&gt; as well as detail on the AWS API Gateway service that provides an endpoint to invoke the serverless function.&lt;/p&gt;
&lt;p&gt;This is the end product; A serverless endpoint.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/Ql676IX.png&quot; alt=&quot;End product - a simple serverless endpoint&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/jonwhittlestone/lambdapi&quot;&gt;code can be found on Github.&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once cloned, install dependencies, set your AWS account ID as an environment variable and run it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(venv) (base) $ python src/main.py 

✅ Remove existing named lambda/api
✅ Create the lambda
✅ Deploy the lambda
✅ Remove any existing API
✅ Create API
✅ Deploy API
✅ Test API
SERVERLESS ENDPOINT RESPONSE from https://qvaik2un06.execute-api.eu-west-2.amazonaws.com/hello-world : 
b'{&quot;querystring_params:&quot;: {}, &quot;err&quot;: null, &quot;message&quot;: &quot;Hello Serverless World&quot;}'&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Setup:-Creating-the-Lambda-function-and-deploying&quot;&gt;Setup: Creating the Lambda function and deploying&lt;a class=&quot;anchor-link&quot; href=&quot;#Setup:-Creating-the-Lambda-function-and-deploying&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;h3 id=&quot;Python-module-structure&quot;&gt;Python module structure&lt;a class=&quot;anchor-link&quot; href=&quot;#Python-module-structure&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Like this&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lambdapi
├── src 
│   ├── __init__.py
│   ├── settings.py         # constants like AWS account
│   ├── main.py             # run me for instant results
|   └─── python_lambdas                   
|   |   └─── hello_world.py # serverless python function
│   ├── api_gateway.py      # boto3 for api_gateway
│   ├── lambda_functions.py # boto3 lambda
│   └── helpers.py          # file operations
└── ...&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;AWS-Permissions-with-IAM&quot;&gt;AWS Permissions with IAM&lt;a class=&quot;anchor-link&quot; href=&quot;#AWS-Permissions-with-IAM&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;IAM Resources used - policies and roles.&lt;/p&gt;
&lt;p&gt;IAM Policies define the effect, actions, resources and optional conditions in a JSON document.&lt;/p&gt;
&lt;p&gt;An IAM user is a person or service that interacts with AWS with their own access to the management console. A user can have a policy attached to them. In this case it is more appropriate to grant policy access with an IAM role.
When assuming an IAM role (see Trusted Entity), access to a service can be granted to a user without having to give them new keys as the user can use temporary security tokens.&lt;/p&gt;
&lt;p&gt;Create an IAM Lambda access policy for IAM using an IAM client that you create.&lt;/p&gt;
&lt;p&gt;The access definition is provided in an &lt;code&gt;s3_access_policy_document&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JSON dictionary &lt;/li&gt;
&lt;li&gt;Action key &lt;code&gt;Statement&lt;/code&gt; with &lt;ul&gt;
&lt;li&gt;all S3 permissions&lt;/li&gt;
&lt;li&gt;Cloudwatch to create log groups and streams for monitoring of the lamdba events&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After creating a policy, create role and attach it to an execution role by assuming the role.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Verifying-the-Lambda-was-created-on-AWS-Console&quot;&gt;Verifying the Lambda was created on AWS Console&lt;a class=&quot;anchor-link&quot; href=&quot;#Verifying-the-Lambda-was-created-on-AWS-Console&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;By way of sanity check, we can verify the Lambda function has been uploaded in the AWS Console.&lt;/p&gt;
&lt;p&gt;For the appropriate region, you may see the function, memory, timeout and our chosen permissions.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/RoOfCJt.gif&quot; alt=&quot;Animation of Console&quot; /&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;## Testing the endpoint&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;## Parting Note&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;This&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;brief&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;walkthrough&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;essentially&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;achieves&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;same&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solution&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AWS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Serverless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Application&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Hello World&amp;#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tutorial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Alternative-Solution&quot;&gt;Alternative Solution&lt;a class=&quot;anchor-link&quot; href=&quot;#Alternative-Solution&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;p&gt;The &lt;a href=&quot;https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html&quot;&gt;AWS Serverless Application Model&lt;/a&gt; is a framework that allows you to build and deploy serverless applications.&lt;/p&gt;
&lt;p&gt;You may declare the lambda functions to be used and additional resources like APIs and database in a YAML template. It uses an implementation of AWS CloudFormation to define these resources provides myriad other &lt;a href=&quot;https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html#benefits-of-using-sam&quot;&gt;benefits&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-getting-started-hello-world.html&quot;&gt;AWS Hello World SAM tutorial&lt;/a&gt; covers what we outlined manually above and also shows how to run the Lambda and API route locally and remove the CloudFormation stack to clean up.&lt;/p&gt;
&lt;p&gt;However, when dissecting software to understand a technique, it's always useful to strip away layers of abstraction.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;Resources-used:-with-thanks-&amp;#128154;&quot;&gt;Resources used: with thanks &amp;#128154;&lt;a class=&quot;anchor-link&quot; href=&quot;#Resources-used:-with-thanks-&amp;#128154;&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Niyazi Erdogan's O'Reilly course - Build and Deploy Lambda functions AWS and Python &lt;a href=&quot;https://learning.oreilly.com/videos/build-and-deploy/9781838557751&quot;&gt;Videos&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Building Lambda Functions with Python &lt;a href=&quot;https://docs.aws.amazon.com/lambda/latest/dg/lambda-python.html&quot;&gt;AWS docs&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;boto3 AWS Python SDK &lt;a href=&quot;https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/lambda.html#lambda&quot;&gt;lambda docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.aws.amazon.com/lambda/latest/dg/lambda-intro-execution-role.html&quot;&gt;AWS Lambda Execution role&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Using AWS Lambda with Amazon API Gateway &lt;a href=&quot;https://docs.aws.amazon.com/lambda/latest/dg/services-apigateway-tutorial.html&quot;&gt;AWS Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Setting up API Gateway and integrating it with Lambda proxy in Richard T. Freeman's serverless microservice course &lt;a href=&quot;https://learning.oreilly.com/videos/building-a-scalable/9781788622318/9781788622318-video4_3&quot;&gt;O'Reilly Videos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;AWS SAM Hello World Tutorial - &lt;a href=&quot;https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-getting-started-hello-world.html&quot;&gt;AWS Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://i.imgur.com/C2bPqfo.png" /><media:content medium="image" url="http://i.imgur.com/C2bPqfo.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Scheduled Severless Startup</title><link href="https://words.howapped.com/aws%20lambda/automation/python/2020/06/11/scheduled-serverless-startup.html" rel="alternate" type="text/html" title="Scheduled Severless Startup" /><published>2020-06-11T00:00:00-05:00</published><updated>2020-06-11T00:00:00-05:00</updated><id>https://words.howapped.com/aws%20lambda/automation/python/2020/06/11/scheduled-serverless-startup</id><content type="html" xml:base="https://words.howapped.com/aws%20lambda/automation/python/2020/06/11/scheduled-serverless-startup.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-06-11-scheduled-serverless-startup.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;The-Problem&quot;&gt;The Problem&lt;a class=&quot;anchor-link&quot; href=&quot;#The-Problem&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;p&gt;As part of the Covid-19 effort, Digital Ocean donated some free credit to us to work on a local food delivery scheme.&lt;/p&gt;
&lt;p&gt;To make that credit go as far as possible and to minimise power consumption, we'd like to power up and down the servers according to a schedule.&lt;/p&gt;
&lt;h1 id=&quot;The-Solution&quot;&gt;The Solution&lt;a class=&quot;anchor-link&quot; href=&quot;#The-Solution&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;p&gt;Esimated cost saving...&lt;/p&gt;
&lt;p&gt;Here's how to do that with AWS Lambda, with cloudfront events. We iterate on that to use the Serverless Framework.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TLDR; Have a look at the &lt;a href=&quot;https://github.com/jonwhittlestone/scheduled-serverless-startup&quot;&gt;companion repo.&lt;/a&gt;. It contains an example dockerized web app and the shell scripts for starting containers and creating the service.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This article covers how to automate with a Digital Ocean droplet so to follow along with the code, you can create one using the example from &lt;a href=&quot;http://words.howapped.com/systemd/automation/2020/06/01/automatically-restart-docker-after-reboot-with-service.html#cURL-to-create-the-droplet&quot;&gt;a previous article&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We will examine the cURL statements, convert those into Python. We can use AWS Lambda to execute the Python in a serverless environment. Then, the AWS lambda functions can be triggered by Cloudwatch events to a schedule so machines can be brought online only during operating hours.&lt;/p&gt;
&lt;p&gt;We can notify any interested parties using Microsoft Teams - a topic for a subsequent post.&lt;/p&gt;
&lt;h2 id=&quot;Prerequisites&quot;&gt;Prerequisites&lt;a class=&quot;anchor-link&quot; href=&quot;#Prerequisites&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;You can always check the &lt;a href=&quot;https://github.com/jonwhittlestone/scheduled-serverless-startup&quot;&gt;companion repo.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You will need to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;.. have &lt;code&gt;jq&lt;/code&gt; installed to format JSON responses&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://stedolan.github.io/jq/download/&quot;&gt;Download JQ&lt;/a&gt; for your OS&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;.. have a server on which a dockerized web app will start automatically when the server is restarted&lt;ul&gt;
&lt;li&gt;See previous article on how to &lt;a href=&quot;http://words.howapped.com/systemd/automation/2020/06/01/automatically-restart-docker-after-reboot-with-service.html#cURL-to-create-the-droplet&quot;&gt;create one with DigitalOcean&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;.. have &lt;a href=&quot;https://boto3.amazonaws.com/v1/documentation/api/latest/guide/quickstart.html#installation&quot;&gt;installed Boto3 with your AWS account credentials&lt;/a&gt; so we can work with the AWS Python SDK.&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;cURL-statements-to-boot-down-and-up&quot;&gt;cURL statements to boot down and up&lt;a class=&quot;anchor-link&quot; href=&quot;#cURL-statements-to-boot-down-and-up&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;As covered in a &lt;a href=&quot;http://words.howapped.com/systemd/automation/2020/06/01/automatically-restart-docker-after-reboot-with-service.html&quot;&gt;previous post&lt;/a&gt;, our web app will restart when rebooted using a systemd service.&lt;/p&gt;
&lt;p&gt;Rather than ssh or the cloud provider's control panel, the server can be started and stopped using cURL.&lt;/p&gt;
&lt;p&gt;In the case of DigitalOcean:&lt;/p&gt;
&lt;p&gt;Find out the ID of the server:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl \
        -H 'Content-Type: application/json' \
        -H 'Authorization: Bearer '$DIGITAL_OCEAN_ACCESS_TOKEN'' \
    &quot;https://api.digitalocean.com/v2/droplets?name=scheduled-serverless&quot; | jq '.droplets[] | {id:.id, name:.name, status: .status}'&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The output gives us the ID&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    ...
},
{
  &quot;id&quot;: 195786885,
  &quot;name&quot;: &quot;scheduled-serverless&quot;,
  &quot;status&quot;: &quot;active&quot;
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And then power it down:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl -X POST \
    -H 'Content-Type: application/json' \
    -H 'Authorization: Bearer '$DIGITAL_OCEAN_ACCESS_TOKEN'' \
    -d '{&quot;type&quot;:&quot;power_off&quot;}' \
    &quot;https://api.digitalocean.com/v2/droplets/195786885/actions&quot; | jq '.[] | {id:.id, status:.status, type:.type}'&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which tells us it's in progress&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
  &quot;id&quot;: 955320153,
  &quot;status&quot;: &quot;in-progress&quot;,
  &quot;type&quot;: &quot;power_off&quot;
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The equivalent cURL for powering on the server is virtual identical&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl -X POST \
    -H 'Content-Type: application/json' \
    -H 'Authorization: Bearer '$DIGITAL_OCEAN_ACCESS_TOKEN'' \
    -d '{&quot;type&quot;:&quot;power_on&quot;}' \
    &quot;https://api.digitalocean.com/v2/droplets/195786885/actions&quot; | jq '.[] | {id:.id, status:.status, type:.type}'&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The web app from the example is running on port 80. We know the server's IP address by referring to the control panel. Let's confirm that the service is running by verifying the output in a browser.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jonwhittlestone/words/master/images/do_ip.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Requests-scripts-in-AWS-Lambda&quot;&gt;Requests scripts in AWS Lambda&lt;a class=&quot;anchor-link&quot; href=&quot;#Requests-scripts-in-AWS-Lambda&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;h3 id=&quot;The-cURL-statements-in-Python&quot;&gt;The cURL statements in Python&lt;a class=&quot;anchor-link&quot; href=&quot;#The-cURL-statements-in-Python&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;First, get the ID of the droplet.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;TOKEN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getenv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;DIGITAL_OCEAN_ACCESS_TOKEN&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DROPLET_NAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;scheduled-serverless&amp;#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;&amp;#39;Content-Type&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;application/json&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;&amp;#39;Authorization&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Bearer &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TOKEN&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TOKEN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Your environment should have the `DIGITAL_OCEAN_ACCESS_TOKEN exported.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_droplet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;https://api.digitalocean.com/v2/droplets&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{})&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;droplets&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,{})&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DROPLET_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;DROPLET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_droplet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Droplet ID: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DROPLET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;Droplet ID: 195786885
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Now we have the ID, let's define the functions for bringing the servers down and back up.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;power_off&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;{&amp;quot;type&amp;quot;:&amp;quot;power_off&amp;quot;}&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;https://api.digitalocean.com/v2/droplets/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DROPLET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/actions&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;power_on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;{&amp;quot;type&amp;quot;:&amp;quot;power_on&amp;quot;}&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;https://api.digitalocean.com/v2/droplets/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DROPLET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/actions&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;action_resp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;power_off&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;action_resp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;action&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;action_resp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;action&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;status&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;----&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# action_resp = power_on()&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# print(action_resp[&amp;#39;action&amp;#39;][&amp;#39;type&amp;#39;])&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# print(action_resp[&amp;#39;action&amp;#39;][&amp;#39;status&amp;#39;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;power_off
in-progress
----
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Running-the-scripts-in-AWS-Lambda&quot;&gt;Running the scripts in AWS Lambda&lt;a class=&quot;anchor-link&quot; href=&quot;#Running-the-scripts-in-AWS-Lambda&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Let's translate the cURL statements into Python.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Schedule-the-scripts-with-Cloudwatch-events&quot;&gt;Schedule the scripts with Cloudwatch events&lt;a class=&quot;anchor-link&quot; href=&quot;#Schedule-the-scripts-with-Cloudwatch-events&quot;&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Serverless-framework&quot;&gt;Serverless framework&lt;a class=&quot;anchor-link&quot; href=&quot;#Serverless-framework&quot;&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Quality-of-Life-enhancements&quot;&gt;Quality of Life enhancements&lt;a class=&quot;anchor-link&quot; href=&quot;#Quality-of-Life-enhancements&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;When the target service is unavailable, it's quite unfriendly to show a blank 500 screen. A subsequent post outlines a solution for a forwarding service which can display an Open/Closed for business page to the user, with 'Opening times'&lt;/p&gt;
&lt;p&gt;As part of what's become known as 'Chatops', it's useful to update team members and stakeholders about the status of the server. A future addition will be to use the Microsoft Teams API to notify interested parties.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;Resources&quot;&gt;Resources&lt;a class=&quot;anchor-link&quot; href=&quot;#Resources&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Curl converter - [&lt;a href=&quot;https://github.com/NickCarneiro/curlconverter&quot;&gt;github&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;convert curl commands to Python, JavaScript, PHP, R, Go, Rust, Dart, JSON, Ansible, Elixir&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://words.howapped.com/images/chart-preview.png" /><media:content medium="image" url="https://words.howapped.com/images/chart-preview.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Automatically restart docker containers after reboot</title><link href="https://words.howapped.com/systemd/automation/2020/06/01/automatically-restart-docker-after-reboot-with-service.html" rel="alternate" type="text/html" title="Automatically restart docker containers after reboot" /><published>2020-06-01T00:00:00-05:00</published><updated>2020-06-01T00:00:00-05:00</updated><id>https://words.howapped.com/systemd/automation/2020/06/01/automatically-restart-docker-after-reboot-with-service</id><content type="html" xml:base="https://words.howapped.com/systemd/automation/2020/06/01/automatically-restart-docker-after-reboot-with-service.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-06-01-automatically-restart-docker-after-reboot-with-service.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h1 id=&quot;The-Problem&quot;&gt;The Problem&lt;a class=&quot;anchor-link&quot; href=&quot;#The-Problem&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;p&gt;As part of Covid-19 relief, DigitalOcean donated some free credit for me to work on a local food delivery scheme.&lt;/p&gt;
&lt;p&gt;I need to get most value for money by making that credit go as far as possible. It would also be nice to minimise power consumption.&lt;/p&gt;
&lt;h1 id=&quot;The-Solution&quot;&gt;The Solution&lt;a class=&quot;anchor-link&quot; href=&quot;#The-Solution&quot;&gt; &lt;/a&gt;&lt;/h1&gt;&lt;p&gt;The server should be powered-down outside of operating hours and turned back on before start of business. This can be done using the cloud provider's control panel.&lt;/p&gt;
&lt;p&gt;To avoid manual work starting the web app, a service is needed to bring the containers back online when the droplet is swtiched on.&lt;/p&gt;
&lt;p&gt;Covered in this article is the process for using the DigitalOcean API to create a droplet with the requisite &lt;code&gt;user_data&lt;/code&gt; for creating the &lt;code&gt;systemd&lt;/code&gt; service to start containers at boot time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TLDR; Have a look at the &lt;a href=&quot;https://github.com/jonwhittlestone/scheduled-serverless-startup&quot;&gt;companion repo.&lt;/a&gt;. It contains an example dockerized web app and the shell scripts for starting containers and creating the service.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Not covered in this article is the process to automate the power down and up to a schedule. This is covered in a subsequent article.&lt;/p&gt;
&lt;h2 id=&quot;Prerequisites&quot;&gt;Prerequisites&lt;a class=&quot;anchor-link&quot; href=&quot;#Prerequisites&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;A Digital Ocean account (free trial available)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.digitalocean.com/docs/apis-clis/api/&quot;&gt;Generate an access token&lt;/a&gt; for accessing the DigitalOcean API&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add the token to your environment&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ export DIGITAL_OCEAN_ACCESS_TOKEN=XXXXXXXX&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jq&lt;/code&gt; installed to format JSON responses&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://stedolan.github.io/jq/download/&quot;&gt;Download JQ&lt;/a&gt; for your OS&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Create-a-DigitalOcean-droplet-(optional)&quot;&gt;Create a DigitalOcean droplet (optional)&lt;a class=&quot;anchor-link&quot; href=&quot;#Create-a-DigitalOcean-droplet-(optional)&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;If you already have a web server, with an app, move to section, &lt;a href=&quot;#Create-a-systemd-service&quot;&gt;'Create a systemd service.'&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you do not already have a web server, launch a Droplet with requisite SSH access.&lt;/p&gt;
&lt;h3 id=&quot;cURL-to-create-the-droplet&quot;&gt;cURL to create the droplet&lt;a class=&quot;anchor-link&quot; href=&quot;#cURL-to-create-the-droplet&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;This cURL statement creates an Ubuntu 18.04 server in London. The &lt;code&gt;user_data&lt;/code&gt; key in the payload is used for defining various statements to execute once the server is created. In this case we are cloning the &lt;a href=&quot;https://github.com/jonwhittlestone/scheduled-serverless-startup&quot;&gt;repo&lt;/a&gt; containing the dockerized app, starting it, and creating the systemd service to restart the app when the server boots up.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ curl -X POST \
    -H 'Content-Type: application/json' \
    -H 'Authorization: Bearer '$DIGITAL_OCEAN_ACCESS_TOKEN'' \
    -d '{&quot;name&quot;:&quot;scheduled-serverless&quot;,&quot;region&quot;:&quot;lon1&quot;,&quot;size&quot;:&quot;s-2vcpu-4gb&quot;,&quot;image&quot;:&quot;docker-18-04&quot;, &quot;user_data&quot;:
    &quot;#!/bin/bash
    apt-get update
    apt-get upgrade -y
    git clone https://github.com/jonwhittlestone/scheduled-serverless-startup.git /root/scheduled-serverless-startup
    sh /root/scheduled-serverless-startup/start-containers.sh
    sh /root/scheduled-serverless-startup/create-service.sh&quot;}' \
    &quot;https://api.digitalocean.com/v2/droplets&quot; 

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;SSH-into-your-new-droplet&quot;&gt;SSH into your new droplet&lt;a class=&quot;anchor-link&quot; href=&quot;#SSH-into-your-new-droplet&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;You will be emailed your root password. 
After you SSH in using the provided password, you will be asked to change it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://words.howapped.com/images/copied_from_nb/email.png&quot; alt=&quot;email.png&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;Test-the-web-app-is-running&quot;&gt;Test the web app is running&lt;a class=&quot;anchor-link&quot; href=&quot;#Test-the-web-app-is-running&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The app is running with Docker on port 80, so it's simply a case of:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@scheduled-serverless:~# curl localhost

A Howapped Project.

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;Test-the-service-is-running&quot;&gt;Test the service is running&lt;a class=&quot;anchor-link&quot; href=&quot;#Test-the-service-is-running&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Restart your server with&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@scheduled-serverless:~# sudo reboot

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And then ssh and repeat the cURL statement to the web service&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(base) ➜  ~ ssh root@167.172.56.239 curl localhost
root@167.172.56.239's password: 
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                             Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
A Howapped Project.

100    22  100    22    0     0   1294      0 --:--:-- --:--:-- --:--:--  1294&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Create-a-systemd-service&quot;&gt;Create a systemd service&lt;a class=&quot;anchor-link&quot; href=&quot;#Create-a-systemd-service&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Ubuntu's init system is called &lt;code&gt;systemd&lt;/code&gt; and various flavours of Linux may have differing init systems.&lt;/p&gt;
&lt;h3 id=&quot;Scripting-the-starting-of-the-web-app&quot;&gt;Scripting the starting of the web app&lt;a class=&quot;anchor-link&quot; href=&quot;#Scripting-the-starting-of-the-web-app&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;We need to define what should be automated which is starting the containers.&lt;/p&gt;
&lt;p&gt;In this case, I have an example dockerized app defined in the &lt;a href=&quot;https://github.com/jonwhittlestone/scheduled-serverless-startup&quot;&gt;companion repo&lt;/a&gt;, so let's clone that.&lt;/p&gt;
&lt;p&gt;If this directory is present (because it has been previously cloned), then just pull the latest changes.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

if [ -d &quot;/root/scheduled-serverless-startup&quot; ] 
then
    git pull origin master
else
    cd /root/scheduled-serverless-startup
     git clone https://github.com/jonwhittlestone/scheduled-serverless-startup.git /root/scheduled-serverless-startup
fi
cd /root/scheduled-serverless-startup/app
docker-compose up -d&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Lastly, we start containers with &lt;code&gt;docker-compose&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;Using-systemctl-to-enable-the-service&quot;&gt;Using &lt;code&gt;systemctl&lt;/code&gt; to enable the service&lt;a class=&quot;anchor-link&quot; href=&quot;#Using-systemctl-to-enable-the-service&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Using the interface &lt;code&gt;systemctl&lt;/code&gt; we can manage the init system. Each service is called a unit file. This means loading a service, &lt;a href=&quot;https://www.linode.com/docs/quick-answers/linux-essentials/introduction-to-systemctl/#enabling-a-service-at-boot&quot;&gt;enabling at boot&lt;/a&gt; and restarting.&lt;/p&gt;
&lt;p&gt;On an Ubuntu system, you may inspect the running services:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ systemctl status | head
● madebyjon
    State: running
     Jobs: 0 queued
   Failed: 0 units
    Since: Mon 2020-06-08 05:56:42 BST; 1 day 2h ago
   CGroup: /
           ├─3770 bpfilter_umh
           ├─user.slice
           │ └─user-1000.slice
           │   ├─user@1000.service&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following &lt;a href=&quot;https://github.com/jonwhittlestone/scheduled-serverless-startup/blob/master/create-service.sh&quot;&gt;shell script&lt;/a&gt; creates the unit file, enables it at boot and starts the service.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash
touch /etc/systemd/system/howapped.service
cat &amp;gt; /etc/systemd/system/howapped.service&amp;lt;&amp;lt;-EOF
    [Unit]
    Description=HowappedProjectStartOnBoot
    After=network.target
    [Service]
    Type=simple
    User=root
    WorkingDirectory=/root/scheduled-serverless-startup
    ExecStart=/bin/sh /root/scheduled-serverless-startup/start-containers.sh
    Restart=on-abort
    [Install]
    WantedBy=multi-user.target
EOF
systemctl daemon-reload
systemctl enable howapped.service
systemctl restart howapped.service&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Enable-the-systemd-service&quot;&gt;Enable the systemd service&lt;a class=&quot;anchor-link&quot; href=&quot;#Enable-the-systemd-service&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The below excerpt verifies we have the working directory created.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@scheduled-serverless:~/scheduled-serverless-startup# ls
README.md    app                create-service.sh
Vagrantfile  cloud-config.yaml  start-containers.sh
root@scheduled-serverless:~/scheduled-serverless-startup# pwd
/root/scheduled-serverless-startup&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And this runs the shell script to create the unit file and enable it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@scheduled-serverless:~/scheduled-serverless-startup# sh create-service.sh 
Created symlink /etc/systemd/system/multi-user.target.wants/howapped.service → /etc/systemd/system/howapped.service.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Test-it&quot;&gt;Test it&lt;a class=&quot;anchor-link&quot; href=&quot;#Test-it&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;We will use the CURL statement to find the ID of our droplet, so that we can then use a CURL statement to power down the machine.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl \
        -H 'Content-Type: application/json' \
        -H 'Authorization: Bearer '$DIGITAL_OCEAN_ACCESS_TOKEN'' \
    &quot;https://api.digitalocean.com/v2/droplets?name=scheduled-serverless&quot; | jq '.droplets[] | {id:.id, name:.name, status: .status}'

{
  &quot;id&quot;: 195393249,
  &quot;name&quot;: &quot;scheduled-serverless&quot;,
  &quot;status&quot;: &quot;on&quot;
}


# power it down
$ curl -X POST \
    -H 'Content-Type: application/json' \
    -H 'Authorization: Bearer '$DIGITAL_OCEAN_ACCESS_TOKEN'' \
    -d '{&quot;type&quot;:&quot;power_off&quot;}' \
    &quot;https://api.digitalocean.com/v2/droplets/195393249/actions&quot; | jq '.[] | {id:.id, status:.status, type:.type}'&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We power it back up:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl -X POST \
    -H 'Content-Type: application/json' \
    -H 'Authorization: Bearer '$DIGITAL_OCEAN_ACCESS_TOKEN'' \
    -d '{&quot;type&quot;:&quot;power_on&quot;}' \
    &quot;https://api.digitalocean.com/v2/droplets/195393249/actions&quot; | jq '.[] | {id:.id, status:.status, type:.type}'

{
  &quot;id&quot;: 953153688,
  &quot;status&quot;: &quot;in-progress&quot;,
  &quot;type&quot;: &quot;power_on&quot;
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And verify our app is running.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ssh root@104.248.174.117 curl localhost
root@104.248.174.117's password: 
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
A Howapped Project.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Clean-up&quot;&gt;Clean up&lt;a class=&quot;anchor-link&quot; href=&quot;#Clean-up&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;If you were following along by creating a DigitalOcean droplet, you may wish to power down or destroy the machine if not in use.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://words.howapped.com/images/copied_from_nb/destroy.png&quot; alt=&quot;destroy.png&quot; /&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Resources&quot;&gt;Resources&lt;a class=&quot;anchor-link&quot; href=&quot;#Resources&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.linode.com/docs/quick-answers/linux-essentials/introduction-to-systemctl/&quot;&gt;Linode - Introduction to Systemctl&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://words.howapped.com/images/on.png" /><media:content medium="image" url="https://words.howapped.com/images/on.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>