{
  
    
        "post0": {
            "title": "Scheduled Severless Startup",
            "content": "The Problem . As part of the Covid-19 effort, Digital Ocean donated some free credit to us to work on a local food delivery scheme. . To make that credit go as far as possible and to minimise power consumption, we&#39;d like to power up and down the servers according to a schedule. . The Solution . Esimated cost saving... . Here&#39;s how to do that with AWS Lambda, with cloudfront events. We iterate on that to use the Serverless Framework. . Prerequisites . To follow along, there is a bit of set up involved to launch a Droplet that you can inspect with SSH if you need. . You could always just check the companion repo. . You will need to: . .. have jq installed to format JSON responses Download JQ for your OS | . | . .. generate an access token so you can use the Digital Ocean API. | . .. add the access token to your environment . $ export DIGITAL_OCEAN_ACCESS_TOKEN=[your_digital_ocean_token] . | .. have a running Digital Ocean Droplet with Docker installed. . If you need to create one, use the following API operation. . $ curl -X POST -H &#39;Content-Type: application/json&#39; -H &#39;Authorization: Bearer &#39;$DIGITAL_OCEAN_ACCESS_TOKEN&#39;&#39; -d &#39;{&quot;name&quot;:&quot;scheduled-serverless&quot;,&quot;region&quot;:&quot;lon1&quot;,&quot;size&quot;:&quot;s-2vcpu-4gb&quot;,&quot;image&quot;:&quot;docker-18-04&quot;}&#39; &quot;https://api.digitalocean.com/v2/droplets&quot; . | .. generate and add the private key to your droplet. When generating, Select: RSA and 4096 and leave Passphrase blank. You may use the following API operation. . | .. add the public key to your environment . | . | . Shutdown a Droplet with CURL . Assuming, your account only has one Digital Ocean droplet, the following CURL statement shows active status and the ID . $ curl -H &#39;Content-Type: application/json&#39; -H &#39;Authorization: Bearer &#39;$DIGITAL_OCEAN_ACCESS_TOKEN&#39;&#39; &quot;https://api.digitalocean.com/v2/droplets?name=scheduled-serverless&quot; | jq &#39;.droplets[0].status, .droplets[1].id&#39; % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 4137 0 4137 0 0 7925 0 --:--:-- --:--:-- --:--:-- 7940 &quot;active&quot; 194534673 . Issuing the following CURL will shut it down. . curl -X POST -H &#39;Content-Type: application/json&#39; -H &#39;Authorization: Bearer &#39;$DIGITAL_OCEAN_ACCESS_TOKEN&#39;&#39; -d &#39;{&quot;type&quot;:&quot;shutdown&quot;}&#39; &quot;https://api.digitalocean.com/v2/droplets/194534673/actions&quot; . We can then verify the droplet has been powered down by reissuing the previous command from above. to show the &#39;active&#39; status. . ... &quot;off&quot; 194534673 . Power on a Droplet with CURL . The action for powering on follows the same convention. . $ curl -X POST -H &#39;Content-Type: application/json&#39; -H &#39;Authorization: Bearer &#39;$DIGITAL_OCEAN_ACCESS_TOKEN&#39;&#39; -d &#39;{&quot;type&quot;:&quot;power_on&quot;}&#39; &quot;https://api.digitalocean.com/v2/droplets/194534673/actions&quot; . We can check the machine has been powered down: . $ curl -H &#39;Content-Type: application/json&#39; -H &#39;Authorization: Bearer &#39;$DIGITAL_OCEAN_ACCESS_TOKEN&#39;&#39; &quot;https://api.digitalocean.com/v2/droplets?name=scheduled-serverless&quot; | jq &#39;.droplets[] | {id:.id, name:.name,status: .status}&#39; . Requests scripts in AWS Lambda . First lets translate these CURL statements into Python. . import requests headers = { &#39;Content-Type&#39;: &#39;application/json&#39;, # &#39;Authorization&#39;: &#39;Bearer $DIGITAL_OCEAN_ACCESS_TOKEN&#39;, &#39;Authorization&#39;: &#39;Bearer 83db8999c55b08afadee99995ca0f4bfad1b14cc2103ef07772083f652e748e5&#39;, } params = ( (&#39;page&#39;, &#39;1&#39;), (&#39;per_page&#39;, &#39;100&#39;), ) response = requests.get(&#39;https://api.digitalocean.com/v2/droplets&#39;, headers=headers, params=params) #data = &#39;{&quot;type&quot;:&quot;shutdown&quot;}&#39; #response = requests.post(&#39;https://api.digitalocean.com/v2/droplets/194534673/actions&#39;, headers=headers, data=data) print(response) . &lt;Response [200]&gt; . Schedule the scripts with Cloudwatch events . Serverless framework . Team notifications with Slack . As part of what&#39;s become known as &#39;Chatops&#39;, it&#39;s useful to update team members and stakeholders about the status of the server. . There are a variety of messaging platforms that have APIs such as Telegram or even SMS, but Slack has become one of the most popular. .",
            "url": "https://words.howapped.com/aws%20lambda/automation/python/2020/06/01/scheduled-serverless-startup.html",
            "relUrl": "/aws%20lambda/automation/python/2020/06/01/scheduled-serverless-startup.html",
            "date": " • Jun 1, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About",
          "content": "Howapped is a software consultancy from London, UK. . howapped words covers learnings and project updates from the Howapped labs 1. . This website is powered by fastpages . not really a lab with test tubes and stuff. &#8617; . |",
          "url": "https://words.howapped.com/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://words.howapped.com/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}